openapi: 3.0.3
info:
  title: ZAMONG Service
  description: ZAMONG Service Backend API Specification
  contact:
    name: API Support
    email: jiwoourty@gmail.com
  version: 0.0.1
servers:
  - url: 'http://localhost:8080'
    description: localhost server
tags:
  - name: auth
    description: 사용자 인증 관련 API
  - name: user
    description: 사용자 관련 API
  - name: dream
    description: 꿈 관련 API

paths:
  '/auth/user-id/duplicate':
    post:
      tags:
        - auth
      summary: "회원가입시 아이디 중복 확인 API"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: true
              writeOnly: true
              properties:
                id:
                  $ref: '#/components/parameters/id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: "response success"
                  status:
                    example: 200
                  response:
                    example: "사용가능한 아이디입니다"
        400:
          $ref: '#/components/responses/DuplicatedUserId'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/auth/signup':
    post:
      tags:
        - auth
      summary: "회원가입 API"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: true
              writeOnly: true
              properties:
                name:
                  $ref: '#/components/parameters/name'
                email:
                  $ref: '#/components/parameters/email'
                authentication_code:
                  $ref: '#/components/parameters/authentication_code'
                id:
                  $ref: '#/components/parameters/id'
                password:
                  $ref: '#/components/parameters/password'
      responses:
        201:
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: "response success"
                  status:
                    example: 201
                  response:
                    type: object
                    $ref: '#/components/schemas/UserModel'
        401:
          $ref: '#/components/responses/UnauthorizedAuthenticationCode'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/auth/login':
    post:
      tags:
        - auth
      summary: "로그인 API"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: true
              writeOnly: true
              properties:
                user_identity:
                  $ref: '#/components/parameters/user_identity'
                password:
                  $ref: '#/components/parameters/password'
      responses:
        200:
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: "response success"
                  status:
                    example: 200
                  response:
                    type: object
                    properties:
                      access_token:
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
                      refresh_token:
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
        500:
          $ref: '#/components/responses/InternalServerError'
  '/auth/refresh':
    post:
      tags:
        - auth
      summary: "토큰 재발급 API"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: true
              writeOnly: true
              properties:
                access_token:
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
                refresh_token:
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: "response success"
                  status:
                    example: 200
                  response:
                    type: object
                    properties:
                      access_token:
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
                      refresh_token:
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
        500:
          $ref: '#/components/responses/InternalServerError'
  '/user/{user-uuid}':
    parameters:
      - $ref: '#/components/parameters/user-uuid'
    get:
      description: '사용자 기본 정보'
      tags:
        - user
      summary: "사용자 기본정보 API"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: "response success"
                  status:
                    example: 200
                  response:
                    type: object
                    $ref: '#/components/schemas/UserModel'
        400:
          $ref: '#/components/responses/BadUserUUID'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/user/me':
    parameters:
      - name: Authorization
        in: header
        description: Authorization Bearer Header
        required: true
        type: string
        example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
    get:
      description: '내 기본 정보'
      tags:
        - user
      summary: "내 기본정보 API"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: "response success"
                  status:
                    example: 200
                  response:
                    type: object
                    $ref: '#/components/schemas/UserModel'
        400:
          $ref: '#/components/responses/BadUserUUID'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  parameters:
    user-uuid:
      name: user-uuid
      required: true
      in: path
      description: UUID 형태의 사용자의 식별자
      schema:
        type: string
        format: uuid
        writeOnly: true
    name:
      name: user
      required: true
      in: path
      example: 김진근
    email:
      name: email
      required: true
      in: path
      example: 201403kjg@dsm.hs.kr
    authentication_code:
      name: authentication_code
      required: true
      in: path
      example: "000000 (문자열)"
    id:
      name: id
      required: true
      in: path
      example: dsm_jingeun04
    password:
      name: password
      required: true
      in: path
      example: 사용자 비밀번호
    user_identity:
      required: true
      in: path
      example: 사용자 id 또는 email
  schemas:
    UserModel:
      type: object
      readOnly: true
      properties:
        uuid:
          required: true
          type: uuid
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          required: true
          type: string
          example: 김진근
        email:
          required: true
          type: string
          format: email
          example: 201403kjg@dsm.hs.kr
        id:
          required: true
          example: dsm_jingeun04
    BadUserUUIDModel:
      type: object
      properties:
        message:
          type: string
          example: response error
        status:
          example: 400
        response:
          type: object
          properties:
            name:
              example: Bad User UUID
            description:
              example: "잘못된 식별자입니다"
    DuplicatedUserIdErrorModel:
      type: object
      properties:
        message:
          type: string
          example: response error
        status:
          example: 400
        response:
          type: object
          properties:
            name:
              example: Duplicated User Id
            description:
              example: "중복된 아이디입니다"
    UnauthorizedAuthenticationCodeErrorModel:
      type: object
      properties:
        message:
          type: string
          example: response error
        status:
          example: 401
        response:
          type: object
          properties:
            name:
              example: Unauthorized Authentication Code
            description:
              example: "인증코드가 잘못되었습니다"
    InternalServerErrorModel:
      type: object
      readOnly: true
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          example: 500
        response:
          type: object
          properties:
            name:
              example: Internal Server Error
            description:
              example: "오류가 발생했습니다"
  responses:
    BadUserUUID:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadUserUUIDModel'
    DuplicatedUserId:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DuplicatedUserIdErrorModel'
    UnauthorizedAuthenticationCode:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedAuthenticationCodeErrorModel'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerErrorModel'