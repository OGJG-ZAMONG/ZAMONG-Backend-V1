openapi: 3.0.3

info:
  title: ZAMONG Service
  description: ZAMONG Service Backend API Specification
  contact:
    name: API Support
    email: jiwoourty@gmail.com
  version: 0.0.1

servers:
  - url: 'http://localhost:8080'
    description: localhost server

tags:

  - name: auth
    description: 사용자 인증 관련 API
  - name: user
    description: 사용자 관련 API
  - name: dream
    description: 꿈 관련 API

paths:

  '/auth/user-id/duplicate':
    post:
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          properties:
            id:
              $ref: '#/components/parameters/id'
      tags:
        - auth
      summary: "회원가입시 아이디 중복 확인 API"
      description: "회원가입시 아이디가 중복되는지 확인하기 위한 API입니다"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdNotDuplicateResponse'

  '/auth/mail':
    post:
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          properties:
            address:
              $ref: '#/components/parameters/email'
      tags:
        - auth
      summary: "이메일 전송 API"
      description: "API를 호출하면 이메일로 인증코드를 전송합니다"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTokenResponse'

  '/auth/signup':
    post:
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          properties:
            name:
              $ref: '#/components/parameters/name'
            email:
              $ref: '#/components/parameters/email'
            authentication_code:
              $ref: '#/components/parameters/authentication_code'
            id:
              $ref: '#/components/parameters/id'
            password:
              $ref: '#/components/parameters/password'
      tags:
        - auth
      summary: "회원가입 API"
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedUserResponse'

  '/auth/login':
    post:
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          properties:
            user_identity:
              $ref: '#/components/parameters/user_identity'
            password:
              $ref: '#/components/parameters/password'
      tags:
        - auth
      summary: "로그인 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTokenResponse'

  '/auth/refresh':
    post:
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          properties:
            access_token:
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
            refresh_token:
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
      tags:
        - auth
      summary: "토큰 재발급 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTokenResponse'

  '/user/{user-uuid}':
    parameters:
      - $ref: '#/components/parameters/user-uuid'
    get:
      description: '사용자 기본 정보'
      tags:
        - user
      summary: "사용자 기본정보 API"
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  status:
                    example: 200
                  response:
                    $ref: '#/components/schemas/UserInformationResponse'

  '/user/me':
    parameters:
      - $ref: '#/components/parameters/bearer_header'
    get:
      description: '내 기본 정보'
      tags:
        - user
      summary: "내 기본정보 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInformationResponse'

  '/user/follow':
    parameters:
      - $ref: '#/components/parameters/bearer_header'
    post:
      tags:
        - user
      summary: "사용자 팔로우 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUserResponse'

  '/user/{user-uuid}/following':
    get:
      parameters:
        - $ref: '#/components/parameters/bearer_header'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      tags:
        - user
      summary: "사용자 팔로잉 목록 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowingUserGroupResponse'

  '/user/{user-uuid}/follower':
    get:
      parameters:
        - $ref: '#/components/parameters/bearer_header'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      tags:
        - user
      summary: "사용자 팔로워 목록 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowerUserGroupResponse'

  '/dream/share':
    get:
      parameters:
        - $ref: '#/components/parameters/bearer_header'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      tags:
        - dream
      summary: "공개된 공유 꿈 목록 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareDreamGroupResponse'
    post:
      parameters:
        - $ref: '#/components/parameters/bearer_header'
        - in: 'body'
          name: 'body'
          required: true
          schema:
            properties:
              title:
                $ref: '#/components/parameters/title'
              content:
                $ref: '#/components/parameters/content'
              dream_types:
                $ref: '#/components/parameters/dream_types'
              quality:
                $ref: '#/components/parameters/quality'
              sleep_begin_datetime:
                $ref: '#/components/parameters/begin_datetime'
              sleep_end_datetime:
                $ref: '#/components/parameters/end_datetime'
      tags:
        - dream
      summary: "공유 꿈 작성 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShareDreamResponse'

  '/dream/share/{dream-uuid}':
    get:
      parameters:
        - $ref: '#/components/parameters/bearer_header'
        - $ref: '#/components/parameters/dream-uuid'
      tags:
        - dream
      summary: "공유 꿈 상세 정보 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShareDreamResponse'
    put:
      parameters:
        - $ref: '#/components/parameters/bearer_header'
        - $ref: '#/components/parameters/dream-uuid'
        - in: 'body'
          name: 'body'
          required: true
          schema:
            properties:
              title:
                $ref: '#/components/parameters/title'
              content:
                $ref: '#/components/parameters/content'
              dream_types:
                $ref: '#/components/parameters/dream_types'
              quality:
                $ref: '#/components/parameters/quality'
              sleep_begin_datetime:
                $ref: '#/components/parameters/begin_datetime'
              sleep_end_datetime:
                $ref: '#/components/parameters/end_datetime'
      tags:
        - dream
      summary: "공유 꿈 수정 API"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShareDreamResponse'

  '/dream/share/quality/{dream-uuid}':
    patch:
      parameters:
        - $ref: '#/components/parameters/dream-uuid'
        - in: 'body'
          name: 'body'
          required: true
          schema:
            properties:
              quality:
                $ref: '#/components/parameters/quality'
      tags:
        - dream
      summary: "공유 꿈 품질 부분 수정 API"
      responses:
        204:
          description: "No Content"

  '/dream/share/sleep-datetime/{dream-uuid}':
    patch:
      parameters:
        - $ref: '#/components/parameters/dream-uuid'
        - in: 'body'
          name: 'body'
          required: true
          schema:
            properties:
              sleep_begin_datetime:
                $ref: '#/components/parameters/begin_datetime'
              sleep_end_datetime:
                $ref: '#/components/parameters/end_datetime'
      tags:
        - dream
      summary: "공유 꿈 꾼 시각 부분 수정 API"
      responses:
        204:
          description: "No Content"

  '/dream/title/{dream-uuid}':
    patch:
      parameters:
        - $ref: '#/components/parameters/dream-uuid'
        - in: 'body'
          name: 'body'
          required: true
          schema:
            properties:
              title:
                $ref: '#/components/parameters/title'
      tags:
        - dream
      summary: "꿈 제목 부분 수정 API"
      responses:
        204:
          description: "No Content"

  '/dream/content/{dream-uuid}':
    patch:
      parameters:
        - $ref: '#/components/parameters/dream-uuid'
        - in: 'body'
          name: 'body'
          required: true
          schema:
            properties:
              content:
                $ref: '#/components/parameters/content'
      tags:
        - dream
      summary: "꿈 본문 부분 수정 API"
      responses:
        204:
          description: "No Content"

  '/dream/dream-types/{dream-uuid}':
    patch:
      parameters:
        - $ref: '#/components/parameters/dream-uuid'
        - in: 'body'
          name: 'body'
          required: true
          schema:
            properties:
              dream_types:
                $ref: '#/components/parameters/dream_types'
      tags:
        - dream
      summary: "꿈 유형 부분 수정 API"
      responses:
        204:
          description: "No Content"

  '/dream/{dream-uuid}':
    delete:
      parameters:
        - $ref: '#/components/parameters/dream-uuid'
      tags:
        - dream
      summary: '꿈 삭제 API'
      responses:
        204:
          description: 'No Content'

components:

  parameters:
    page:
      name: page
      in: query
      required: true
      example: 1
      description: "요청할 크기에 따른 페이지 번호"
    size:
      name: size
      in: query
      required: true
      example: 12
      description: "요청할 크기"
    bearer_header:
      name: Authorization
      in: header
      required: true
      description: Authorization Bearer Header
      example: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...'
    user-uuid:
      name: user-uuid
      in: path
      required: true
      description: UUID 형태의 사용자의 식별자
      example: 7359fee5-426f-45f5-bd24-cc675e7bdd13
    dream-uuid:
      name: dream-uuid
      in: path
      required: true
      description: 꿈의 식별자
      example: 7359fee5-426f-45f5-bd24-cc675e7bdd13
    profile:
      example: 'https://ogjg-zamong.s3.ap-northeast-1.amazonaws.com/default-posting-image/Rectangle+1.png'
    name:
      example: 김진근
    email:
      example: 201403kjg@dsm.hs.kr
    authentication_code:
      example: '000000'
    id:
      example: dsm_jingeun04
    password:
      example: 사용자 비밀번호
    user_identity:
      example: 사용자 id 또는 email
    timestamp:
      example: '2021-09-27T18:22:45.426066'
    begin_datetime:
      example: '2021-09-27T00:00:00.426066'
    end_datetime:
      example: '2021-09-27T07:00:00.426066'
    title:
      example: '나 꿈속에서 꿈인거 알아차리고 깨어남'
    content:
      example: '내꿈 상황은 소묘실기보려고 학교반에 앉아서 대기상태. 거기에 애들도 많았었고 그냥 수능시험보는거랑 똑같았음 자리배치...'
    dream_types:
      type: array
      example:
        - 'LUCID_DREAM'
        - 'NIGHTMARE'
    quality:
      example: 'BAD'
    lucy_count:
      example: 87

  schemas:

    CreateShareDreamResponse:
      properties:
        status:
          example: 201
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: false
            response:
              properties:
                uuid:
                  $ref: '#/components/parameters/dream-uuid'
                created_at:
                  $ref: '#/components/parameters/timestamp'
                updated_at:
                  $ref: '#/components/parameters/timestamp'

    ShareDreamGroupResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: true
            response:
              properties:
                share_dreams:
                  type: array
                  items:
                    properties:
                      default_posting_image:
                        $ref: '#/components/parameters/profile'
                      title:
                        $ref: '#/components/parameters/title'
                      profile:
                        $ref: '#/components/parameters/profile'
                      is_shared:
                        example: true
                      created_at:
                        $ref: '#/components/parameters/timestamp'
                      updated_at:
                        $ref: '#/components/parameters/timestamp'
                      lucy_count:
                        $ref: '#/components/parameters/lucy_count'
                      dream_types:
                        $ref: '#/components/parameters/dream_types'
                total_size:
                  example: 1
                total_page:
                  example: 3

    FollowingUserGroupResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: true
            response:
              properties:
                followings:
                  type: array
                  items:
                    properties:
                      uuid:
                        $ref: '#/components/parameters/user-uuid'
                      profile:
                        $ref: '#/components/parameters/user-uuid'
                      id:
                        $ref: '#/components/parameters/id'
                      follow_datetime:
                        $ref: '#/components/parameters/timestamp'
                      is_following:
                        example: true
                total_size:
                  example: 1
                total_page:
                  example: 3

    FollowerUserGroupResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: true
            response:
              properties:
                followers:
                  type: array
                  items:
                    properties:
                      uuid:
                        $ref: '#/components/parameters/user-uuid'
                      profile:
                        $ref: '#/components/parameters/profile'
                      id:
                        $ref: '#/components/parameters/id'
                      follow_datetime:
                        $ref: '#/components/parameters/timestamp'
                      is_following:
                        example: true
                total_size:
                  example: 1
                total_page:
                  example: 3

    FollowUserResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: true
            response:
              properties:
                uuid:
                  $ref: '#/components/parameters/user-uuid'
                follower_id:
                  $ref: '#/components/parameters/user-uuid'
                follow_datetime:
                  $ref: '#/components/parameters/timestamp'

    UserInformationResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: false
            response:
              properties:
                uuid:
                  $ref: '#/components/parameters/user-uuid'
                name:
                  $ref: '#/components/parameters/name'
                email:
                  $ref: '#/components/parameters/email'
                id:
                  $ref: '#/components/parameters/id'
                profile:
                  $ref: '#/components/parameters/profile'
                share_dream_count:
                  example: 18
                lucy_count:
                  $ref: '#/components/parameters/lucy_count'

    SignedUserResponse:
      properties:
        status:
          example: 201
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: false
            response:
              properties:
                uuid:
                  $ref: '#/components/parameters/user-uuid'
                name:
                  $ref: '#/components/parameters/name'
                email:
                  $ref: '#/components/parameters/email'
                id:
                  $ref: '#/components/parameters/id'

    MailSentResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: false
            response:
              example: "메일을 성공적으로 보냈습니다"

    IdNotDuplicateResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: false
            response:
              example: "사용가능한 아이디입니다"

    IssueTokenResponse:
      properties:
        status:
          example: 200
        timestamp:
          $ref: '#/components/parameters/timestamp'
        content:
          properties:
            collection_value:
              example: false
            response:
              properties:
                access_token:
                  example: "eeyJhbGciOiJIUzI1NiJ9..."
                refresh_token:
                  example: "eyJhbGciOiJIUzI1NiJ9..."